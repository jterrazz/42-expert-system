============================= test session starts ==============================
platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0 -- /usr/local/opt/python/bin/python3.7
cachedir: .pytest_cache
rootdir: /Users/jterrazz/Projects/42-expert-system
collecting ... collected 176 items

tests/test_correction.py::test_and PASSED                                [  0%]
tests/test_correction.py::test_and_in_conclusions PASSED                 [  1%]
tests/test_correction.py::test_comments PASSED                           [  1%]
tests/test_correction.py::test_double_implies PASSED                     [  2%]
tests/test_correction.py::test_mix PASSED                                [  2%]
tests/test_correction.py::test_mix2 PASSED                               [  3%]
tests/test_correction.py::test_multiple_initial_facts PASSED             [  3%]
tests/test_correction.py::test_multiple_initial_facts2 PASSED            [  4%]
tests/test_correction.py::test_multiple_initial_facts3 PASSED            [  5%]
tests/test_correction.py::test_multiple_initial_facts4 PASSED            [  5%]
tests/test_correction.py::test_multiple_initial_facts5 PASSED            [  6%]
tests/test_correction.py::test_multiple_initial_facts6 PASSED            [  6%]
tests/test_correction.py::test_multiple_no_initial_facts1 PASSED         [  7%]
tests/test_correction.py::test_multiple_no_initial_facts2 PASSED         [  7%]
tests/test_correction.py::test_not PASSED                                [  8%]
tests/test_correction.py::test_or PASSED                                 [  9%]
tests/test_correction.py::test_parenthesis PASSED                        [  9%]
tests/test_correction.py::test_xor PASSED                                [ 10%]
tests/test_correction.py::test_test_and1 PASSED                          [ 10%]
tests/test_correction.py::test_test_and2 PASSED                          [ 11%]
tests/test_correction.py::test_test_or1 PASSED                           [ 11%]
tests/test_correction.py::test_test_or2 PASSED                           [ 12%]
tests/test_correction.py::test_test_or3 PASSED                           [ 13%]
tests/test_correction.py::test_test_or4 PASSED                           [ 13%]
tests/test_correction.py::test_test_paran1 PASSED                        [ 14%]
tests/test_correction.py::test_test_paran2 PASSED                        [ 14%]
tests/test_correction.py::test_test_paran3 PASSED                        [ 15%]
tests/test_correction.py::test_test_paran4 PASSED                        [ 15%]
tests/test_correction.py::test_test_paran5 PASSED                        [ 16%]
tests/test_correction.py::test_test_paran6 PASSED                        [ 17%]
tests/test_correction.py::test_test_paran7 PASSED                        [ 17%]
tests/test_correction.py::test_test_paran8 PASSED                        [ 18%]
tests/test_correction.py::test_test_paran9 PASSED                        [ 18%]
tests/test_correction.py::test_test_paran10 PASSED                       [ 19%]
tests/test_correction.py::test_test_same1 PASSED                         [ 19%]
tests/test_correction.py::test_test_same2 PASSED                         [ 20%]
tests/test_correction.py::test_test_same3 PASSED                         [ 21%]
tests/test_correction.py::test_test_same4 PASSED                         [ 21%]
tests/test_correction.py::test_test_xor1 PASSED                          [ 22%]
tests/test_correction.py::test_test_xor2 PASSED                          [ 22%]
tests/test_correction.py::test_test_xor3 PASSED                          [ 23%]
tests/test_correction.py::test_test_xor4 PASSED                          [ 23%]
tests/test_correction.py::test_test_neg1 PASSED                          [ 24%]
tests/test_correction.py::test_test_neg2 PASSED                          [ 25%]
tests/test_correction.py::test_test_neg3 PASSED                          [ 25%]
tests/test_correction.py::test_test_neg4 PASSED                          [ 26%]
tests/test_correction.py::test_test_neg5 FAILED                          [ 26%]
tests/test_correction.py::test_test_slack1 PASSED                        [ 27%]
tests/test_correction.py::test_test_slack2 PASSED                        [ 27%]
tests/test_correction.py::test_test_slack3 PASSED                        [ 28%]
tests/test_correction.py::test_test_slack4 PASSED                        [ 28%]
tests/test_examples.py::test_good_files[and.txt-expected0] PASSED        [ 29%]
tests/test_examples.py::test_good_files[and_in_conclusions.txt-expected1] PASSED [ 30%]
tests/test_examples.py::test_good_files[AND_LIST-expected2] PASSED       [ 30%]
tests/test_examples.py::test_good_files[AND_OR-expected3] PASSED         [ 31%]
tests/test_examples.py::test_good_files[BI_IF-expected4] PASSED          [ 31%]
tests/test_examples.py::test_good_files[comments.txt-expected5] PASSED   [ 32%]
tests/test_examples.py::test_good_files[double_implies.txt-expected6] PASSED [ 32%]
tests/test_examples.py::test_good_files[easy_test.txt-expected7] FAILED  [ 33%]
tests/test_examples.py::test_good_files[HAfffff_.txt-expected8] PASSED   [ 34%]
tests/test_examples.py::test_good_files[hard_imply_2.txt-expected9] PASSED [ 34%]
tests/test_examples.py::test_good_files[HARDDDDDER_.txt-expected10] PASSED [ 35%]
tests/test_examples.py::test_good_files[imply_and.txt-expected11] PASSED [ 35%]
tests/test_examples.py::test_good_files[just_a_test.txt-expected12] PASSED [ 36%]
tests/test_examples.py::test_good_files[just_a_test2.txt-expected13] PASSED [ 36%]
tests/test_examples.py::test_good_files[mix.txt-expected14] PASSED       [ 37%]
tests/test_examples.py::test_good_files[mix2.txt-expected15] PASSED      [ 38%]
tests/test_examples.py::test_good_files[multiple_initial_facts.txt-expected16] PASSED [ 38%]
tests/test_examples.py::test_good_files[multiple_initial_facts2.txt-expected17] PASSED [ 39%]
tests/test_examples.py::test_good_files[multiple_initial_facts3.txt-expected18] PASSED [ 39%]
tests/test_examples.py::test_good_files[multiple_initial_facts4.txt-expected19] PASSED [ 40%]
tests/test_examples.py::test_good_files[multiple_initial_facts5.txt-expected20] PASSED [ 40%]
tests/test_examples.py::test_good_files[multiple_initial_facts6.txt-expected21] PASSED [ 41%]
tests/test_examples.py::test_good_files[no_initial_facts1.txt-expected22] PASSED [ 42%]
tests/test_examples.py::test_good_files[no_initial_facts2.txt-expected23] PASSED [ 42%]
tests/test_examples.py::test_good_files[not.txt-expected24] PASSED       [ 43%]
tests/test_examples.py::test_good_files[or.txt-expected25] PASSED        [ 43%]
tests/test_examples.py::test_good_files[parentheses_test.txt-expected26] FAILED [ 44%]
tests/test_examples.py::test_good_files[parenthesis.txt-expected27] PASSED [ 44%]
tests/test_examples.py::test_good_files[test_blyat.txt-expected28] PASSED [ 45%]
tests/test_examples.py::test_good_files[test_blyat1.txt-expected29] PASSED [ 46%]
tests/test_examples.py::test_good_files[test_neg_3333.txt-expected30] PASSED [ 46%]
tests/test_examples.py::test_good_files[test_parents_priority.txt-expected31] PASSED [ 47%]
tests/test_examples.py::test_good_files[test_parents_priority2.txt-expected32] PASSED [ 47%]
tests/test_examples.py::test_good_files[test_not-expected33] PASSED      [ 48%]
tests/test_examples.py::test_good_files[test_slack1-expected34] PASSED   [ 48%]
tests/test_examples.py::test_good_files[test_slack2-expected35] PASSED   [ 49%]
tests/test_examples.py::test_good_files[test_slack3-expected36] PASSED   [ 50%]
tests/test_examples.py::test_good_files[test_slack4-expected37] PASSED   [ 50%]
tests/test_examples.py::test_good_files[xor.txt-expected38] PASSED       [ 51%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion9.txt] PASSED [ 51%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesxor3.txt] PASSED [ 52%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis10.txt] PASSED [ 52%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesCrash_test_2] PASSED [ 53%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesempty_file_test.txt] PASSED [ 53%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis11.txt] PASSED [ 54%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion8.txt] PASSED [ 55%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesxor2.txt] PASSED [ 55%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filestest_abbensid1] PASSED [ 56%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesCrash_test_3] PASSED [ 56%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis12.txt] PASSED [ 57%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesCrash_test_4] PASSED [ 57%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesxor1.txt] PASSED [ 58%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesinvalid_chars_test.txt] PASSED [ 59%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_query1.txt] PASSED [ 59%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesand1.txt] PASSED [ 60%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesno_rules_test.txt] PASSED [ 60%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis8.txt] PASSED [ 61%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis9.txt] PASSED [ 61%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesand2.txt] PASSED [ 62%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_query2.txt] PASSED [ 63%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesSTRANGE_OUTPUT_2] PASSED [ 63%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_query3.txt] PASSED [ 64%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesand3.txt] PASSED [ 64%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion10.txt] PASSED [ 65%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesor1.txt] PASSED [ 65%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion11.txt] PASSED [ 66%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_double_implies1.txt] PASSED [ 67%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_double_implies3.txt] PASSED [ 67%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion13.txt] PASSED [ 68%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesdouble_init.txt] PASSED [ 68%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesor2.txt] PASSED [ 69%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesor3.txt] PASSED [ 69%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion12.txt] PASSED [ 70%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_double_implies2.txt] PASSED [ 71%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesnot2.txt] PASSED [ 71%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion16.txt] PASSED [ 72%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion17.txt] PASSED [ 72%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesnot3.txt] PASSED [ 73%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_double_implies5.txt] PASSED [ 73%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesINVALID_FOR_TESTS_1] PASSED [ 74%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesnot1.txt] PASSED [ 75%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion15.txt] PASSED [ 75%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesor4.txt] PASSED [ 76%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion14.txt] PASSED [ 76%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_double_implies4.txt] PASSED [ 77%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesCrash_test_1] PASSED [ 77%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_initial_facts4.txt] PASSED [ 78%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion19.txt] PASSED [ 78%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion18.txt] PASSED [ 79%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_implies4.txt] PASSED [ 80%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_initial_facts2.txt] PASSED [ 80%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion23.txt] PASSED [ 81%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion22.txt] PASSED [ 81%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_implies1.txt] PASSED [ 82%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_initial_facts3.txt] PASSED [ 82%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_initial_facts1.txt] PASSED [ 83%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_implies3.txt] PASSED [ 84%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion20.txt] PASSED [ 84%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion21.txt] PASSED [ 85%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_implies2.txt] PASSED [ 85%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesSTRANGE_OUTPUT_1] PASSED [ 86%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule4.txt] PASSED [ 86%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis7.txt] PASSED [ 87%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis6.txt] PASSED [ 88%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule5.txt] PASSED [ 88%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion1.txt] PASSED [ 89%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule7.txt] PASSED [ 89%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion3.txt] PASSED [ 90%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesno_init_test.txt] PASSED [ 90%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis4.txt] PASSED [ 91%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis5.txt] PASSED [ 92%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion2.txt] PASSED [ 92%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule6.txt] PASSED [ 93%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule2.txt] PASSED [ 93%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion6.txt] PASSED [ 94%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis1.txt] PASSED [ 94%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion7.txt] PASSED [ 95%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule3.txt] PASSED [ 96%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion5.txt] PASSED [ 96%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_rule1.txt] PASSED [ 97%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis2.txt] PASSED [ 97%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesno_query_test.txt] PASSED [ 98%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesparenthesis3.txt] PASSED [ 98%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesINVALID_FOR_TESTS_2] PASSED [ 99%]
tests/test_examples.py::test_bad_files[./tests/_examples/bad_filesbad_conclusion4.txt] PASSED [100%]

=================================== FAILURES ===================================
________________________________ test_test_neg5 ________________________________

    def test_test_neg5():
        try:
            with open('./tests/_correction/test_neg5') as f:
                content = f.readlines()
        except:
            print('Error opening file for reading')
            raise
    
        parser = ExpertParser(content)
        tree = NPITree(parser.structured_rules, parser.facts, parser.queries)
>       assert tree.resolve_query("A") is False
E       AssertionError: assert True is False
E        +  where True = <bound method Tree.resolve_query of 🌲🌲🌲 [92mTree representation[0m 🌲🌲🌲\nNot implemented yet>('A')
E        +    where <bound method Tree.resolve_query of 🌲🌲🌲 [92mTree representation[0m 🌲🌲🌲\nNot implemented yet> = 🌲🌲🌲 [92mTree representation[0m 🌲🌲🌲\nNot implemented yet.resolve_query

tests/test_correction.py:598: AssertionError
----------------------------- Captured stdout call -----------------------------
[95mQUERY: Get the value of A [0m
Checking for children: []
Checking for parents [[90m![90m(A, fixed:False)[0m[0m, [90m![90m(A, fixed:False)[0m[0m]
Checking for children: [[90m(A, fixed:False)[0m, [90m(<=) - fixed: False - op: [[90m(&) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:True)[0m][0m][0m]
[90m(<=) - fixed: False - op: [[90m(&) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:True)[0m][0m][0m resolving from operands: [[90m(&) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:True)[0m][0m]
[90m(&) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:True)[0m][0m resolving from operands: [[90m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:True)[0m]
Checking for children: [[91m(C, fixed:False)[0m]
[91m(C, fixed:False)[0m is False
Checking for children: []
[91m(C, fixed:False)[0m set to False (result is False)
Checking for parents [[90m(&) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:True)[0m][0m]
[92m![91m(C, fixed:False)[0m[0m set to True (result is False)
[91m(C, fixed:False)[0m set to False (result is False)
[92m(B, fixed:True)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m set to True (result is False)
[92m![91m(C, fixed:False)[0m[0m set to True (result is False)
[91m(C, fixed:False)[0m set to False (result is False)
[92m(B, fixed:False)[0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m][0m set to True (result is False)
Checking for parents []
[91m![90m(A, fixed:False)[0m[0m set to False (result is False)
[92m(A, fixed:False)[0m set to True (result is False)
[91m![92m(A, fixed:False)[0m[0m is False
Checking for children: [[92m(A, fixed:False)[0m, [92m(<=) - fixed: False - op: [[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m][0m]
[92m(<=) - fixed: False - op: [[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m][0m resolving from operands: [[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m]
[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m resolving from operands: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m]
[92m![91m(C, fixed:False)[0m[0m is True
Checking for children: [[91m(C, fixed:False)[0m]
[91m(C, fixed:False)[0m is False
Checking for children: []
[91m(C, fixed:False)[0m set to False (result is False)
[92m![91m(C, fixed:False)[0m[0m set to True (result is False)
[91m(C, fixed:False)[0m set to False (result is False)
[92m(B, fixed:False)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m set to True (result is False)
[92m![91m(C, fixed:False)[0m[0m set to True (result is False)
[91m(C, fixed:False)[0m set to False (result is False)
[92m(B, fixed:False)[0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(&) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(B, fixed:False)[0m][0m][0m set to True (result is False)
[91m![92m(A, fixed:False)[0m[0m set to False (result is False)
[92m(A, fixed:False)[0m set to True (result is False)
[92m(A, fixed:False)[0m set to True (result is False)
___________________ test_good_files[easy_test.txt-expected7] ___________________

input = 'easy_test.txt', expected = [True, True, False]

    @pytest.mark.parametrize('input, expected', good_results)
    def test_good_files(input, expected):
        with open("./tests/_examples/good_files/" + input) as f:
            file_lines = f.readlines(1000)
        parser = ExpertParser(file_lines)
        tree = NPITree(parser.structured_rules, parser.facts, parser.queries)
        i = 0
        for query in parser.queries:
>           assert tree.resolve_query(query) == expected[i]
E           assert True == False
E             -True
E             +False

tests/test_examples.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
[95mQUERY: Get the value of A [0m
[92m(A, fixed:True)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[95mQUERY: Get the value of B [0m
Checking for children: [[90m(<=) - fixed: False - op: [[92m(A, fixed:False)[0m][0m, [90m(<=) - fixed: False - op: [[91m(C, fixed:False)[0m][0m, [90m(<=) - fixed: False - op: [[90m(D, fixed:False)[0m][0m]
[90m(<=) - fixed: False - op: [[92m(A, fixed:False)[0m][0m resolving from operands: [[92m(A, fixed:False)[0m]
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(A, fixed:False)[0m][0m set to True (result is False)
[90m(<=) - fixed: False - op: [[91m(C, fixed:False)[0m][0m resolving from operands: [[91m(C, fixed:False)[0m]
[91m(C, fixed:False)[0m is False
Checking for children: []
[91m(C, fixed:False)[0m set to False (result is False)
[91m(<=) - fixed: False - op: [[91m(C, fixed:False)[0m][0m set to False (result is False)
[90m(<=) - fixed: False - op: [[90m(D, fixed:False)[0m][0m resolving from operands: [[90m(D, fixed:False)[0m]
Checking for children: []
Checking for parents [[90m![90m(D, fixed:False)[0m[0m, [90m![90m(D, fixed:False)[0m[0m]
Checking for children: [[90m(D, fixed:False)[0m, [90m(<=) - fixed: False - op: [[90m(|) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m]
[90m(<=) - fixed: False - op: [[90m(|) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m resolving from operands: [[90m(|) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m]
[90m(|) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m resolving from operands: [[90m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m]
Checking for children: [[91m(C, fixed:False)[0m]
[91m(C, fixed:False)[0m is False
Checking for children: []
[91m(C, fixed:False)[0m set to False (result is False)
Checking for parents [[90m(|) - fixed: False - op: [[90m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m]
[92m![91m(C, fixed:False)[0m[0m set to True (result is False)
[91m(C, fixed:False)[0m set to False (result is False)
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m set to True (result is False)
Checking for parents []
[91m![90m(D, fixed:False)[0m[0m set to False (result is False)
[92m(D, fixed:False)[0m set to True (result is False)
[91m![92m(D, fixed:False)[0m[0m is False
Checking for children: [[92m(D, fixed:False)[0m, [92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m]
[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m resolving from operands: [[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m]
[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m resolving from operands: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m]
[92m![91m(C, fixed:False)[0m[0m is True
Checking for children: [[91m(C, fixed:False)[0m]
[91m(C, fixed:False)[0m is False
Checking for children: []
[91m(C, fixed:False)[0m set to False (result is False)
[92m![91m(C, fixed:False)[0m[0m set to True (result is False)
[91m(C, fixed:False)[0m set to False (result is False)
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m![91m(C, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m set to True (result is False)
[91m![92m(D, fixed:False)[0m[0m set to False (result is False)
[92m(D, fixed:False)[0m set to True (result is False)
[92m(D, fixed:False)[0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(D, fixed:False)[0m][0m set to True (result is False)
Checking for parents []
[92m(B, fixed:False)[0m set to True (result is False)
[95mQUERY: Get the value of D [0m
[92m(D, fixed:False)[0m is True
Checking for children: []
[92m(D, fixed:False)[0m set to True (result is False)
_______________ test_good_files[parentheses_test.txt-expected26] _______________

input = 'parentheses_test.txt', expected = [True, True, True, True]

    @pytest.mark.parametrize('input, expected', good_results)
    def test_good_files(input, expected):
        with open("./tests/_examples/good_files/" + input) as f:
            file_lines = f.readlines(1000)
        parser = ExpertParser(file_lines)
        tree = NPITree(parser.structured_rules, parser.facts, parser.queries)
        i = 0
        for query in parser.queries:
>           assert tree.resolve_query(query) == expected[i]
E           assert False == True
E             -False
E             +True

tests/test_examples.py:75: AssertionError
----------------------------- Captured stdout call -----------------------------
[95mQUERY: Get the value of G [0m
[92m(G, fixed:True)[0m is True
Checking for children: []
[92m(G, fixed:False)[0m set to True (result is False)
[95mQUERY: Get the value of V [0m
Checking for children: []
Checking for parents [[90m(^) - fixed: False - op: [[91m(W, fixed:False)[0m, [90m(V, fixed:False)[0m][0m, [90m![90m(V, fixed:False)[0m[0m, [90m![90m(V, fixed:False)[0m[0m]
Checking for children: [[90m(V, fixed:False)[0m, [90m(<=) - fixed: False - op: [[90m(&) - fixed: False - op: [[90m(F, fixed:False)[0m, [90m(E, fixed:False)[0m][0m][0m]
[90m(<=) - fixed: False - op: [[90m(&) - fixed: False - op: [[90m(F, fixed:False)[0m, [90m(E, fixed:False)[0m][0m][0m resolving from operands: [[90m(&) - fixed: False - op: [[90m(F, fixed:False)[0m, [90m(E, fixed:False)[0m][0m]
[90m(&) - fixed: False - op: [[90m(F, fixed:False)[0m, [90m(E, fixed:False)[0m][0m resolving from operands: [[90m(F, fixed:False)[0m, [90m(E, fixed:False)[0m]
Checking for children: [[90m(<=) - fixed: False - op: [[90m(&) - fixed: False - op: [[90m![92m(B, fixed:True)[0m[0m, [92m(A, fixed:True)[0m][0m][0m]
[90m(<=) - fixed: False - op: [[90m(&) - fixed: False - op: [[90m![92m(B, fixed:True)[0m[0m, [92m(A, fixed:True)[0m][0m][0m resolving from operands: [[90m(&) - fixed: False - op: [[90m![92m(B, fixed:True)[0m[0m, [92m(A, fixed:True)[0m][0m]
[90m(&) - fixed: False - op: [[90m![92m(B, fixed:True)[0m[0m, [92m(A, fixed:True)[0m][0m resolving from operands: [[90m![92m(B, fixed:True)[0m[0m, [92m(A, fixed:True)[0m]
Checking for children: [[92m(B, fixed:True)[0m]
[92m(B, fixed:True)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
Checking for parents [[90m(&) - fixed: False - op: [[90m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:True)[0m][0m]
[91m![92m(B, fixed:False)[0m[0m set to False (result is False)
[92m(B, fixed:False)[0m set to True (result is False)
[92m(A, fixed:True)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m set to False (result is False)
[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m set to False (result is False)
Checking for parents [[90m(&) - fixed: False - op: [[90m(F, fixed:False)[0m, [90m(E, fixed:False)[0m][0m]
[91m(F, fixed:False)[0m set to False (result is False)
Checking for children: [[90m(<=) - fixed: False - op: [[90m(C, fixed:False)[0m][0m]
[90m(<=) - fixed: False - op: [[90m(C, fixed:False)[0m][0m resolving from operands: [[90m(C, fixed:False)[0m]
Checking for children: [[90m(<=) - fixed: False - op: [[90m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m][0m]
[90m(<=) - fixed: False - op: [[90m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m][0m resolving from operands: [[90m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m]
[90m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m resolving from operands: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m]
[92m(B, fixed:False)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m][0m set to True (result is False)
Checking for parents [[90m(&) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m, [90m(C, fixed:False)[0m][0m, [90m(|) - fixed: False - op: [[90m![92m(G, fixed:False)[0m[0m, [90m(C, fixed:False)[0m][0m, [90m(|) - fixed: False - op: [[92m(A, fixed:False)[0m, [90m(C, fixed:False)[0m][0m, [90m(|) - fixed: False - op: [[90m(D, fixed:False)[0m, [90m(C, fixed:False)[0m][0m]
[90m(&) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m, [90m(C, fixed:False)[0m][0m resolving from operands: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m, [90m(C, fixed:False)[0m]
[92m(B, fixed:False)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[92m(C, fixed:False)[0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(C, fixed:False)[0m][0m set to True (result is False)
Checking for parents [[90m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [90m(E, fixed:False)[0m][0m]
[92m(E, fixed:False)[0m set to True (result is False)
[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m set to False (result is False)
[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m][0m set to False (result is False)
Checking for parents []
[92m![90m(V, fixed:False)[0m[0m set to True (result is False)
[91m(V, fixed:False)[0m set to False (result is False)
[92m![91m(V, fixed:False)[0m[0m is True
Checking for children: [[91m(V, fixed:False)[0m, [91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m][0m]
[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m][0m resolving from operands: [[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m]
[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m resolving from operands: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m]
[91m(F, fixed:False)[0m is False
Checking for children: [[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m]
[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m resolving from operands: [[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m]
[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m resolving from operands: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m]
[91m![92m(B, fixed:False)[0m[0m is False
Checking for children: [[92m(B, fixed:False)[0m]
[92m(B, fixed:False)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
[91m![92m(B, fixed:False)[0m[0m set to False (result is False)
[92m(B, fixed:False)[0m set to True (result is False)
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m set to False (result is False)
[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m![92m(B, fixed:False)[0m[0m, [92m(A, fixed:False)[0m][0m][0m set to False (result is False)
[91m(F, fixed:False)[0m set to False (result is False)
[92m(E, fixed:False)[0m is True
Checking for children: [[92m(<=) - fixed: False - op: [[92m(C, fixed:False)[0m][0m]
[92m(<=) - fixed: False - op: [[92m(C, fixed:False)[0m][0m resolving from operands: [[92m(C, fixed:False)[0m]
[92m(C, fixed:False)[0m is True
Checking for children: [[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m][0m]
[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m][0m resolving from operands: [[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m]
[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m resolving from operands: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m]
[92m(B, fixed:False)[0m is True
Checking for children: []
[92m(B, fixed:False)[0m set to True (result is False)
[92m(A, fixed:False)[0m is True
Checking for children: []
[92m(A, fixed:False)[0m set to True (result is False)
[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(|) - fixed: False - op: [[92m(B, fixed:False)[0m, [92m(A, fixed:False)[0m][0m][0m set to True (result is False)
[92m(C, fixed:False)[0m set to True (result is False)
[92m(<=) - fixed: False - op: [[92m(C, fixed:False)[0m][0m set to True (result is False)
[92m(E, fixed:False)[0m set to True (result is False)
[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m set to False (result is False)
[91m(<=) - fixed: False - op: [[91m(&) - fixed: False - op: [[91m(F, fixed:False)[0m, [92m(E, fixed:False)[0m][0m][0m set to False (result is False)
[92m![91m(V, fixed:False)[0m[0m set to True (result is False)
[91m(V, fixed:False)[0m set to False (result is False)
[91m(V, fixed:False)[0m set to False (result is False)
===================== 3 failed, 173 passed in 0.50 seconds =====================
